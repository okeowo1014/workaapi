"""
Django settings for workaapi project.

Generated by 'django-admin startproject' using Django 4.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path

import dj_database_url

production = os.getenv('PRODUCTION', None)
import psycopg2
import sshtunnel

sshhost = os.getenv('SSH_HOST', None)
sshusername = os.getenv('SSH_USERNAME', None)
sshpassword = os.getenv('SSH_PASSWORD', None)
sshaddress = os.getenv('SSH_ADDRESS', None)
sshport = os.getenv('SSH_PORT', None)
redisurl = os.getenv('REDIS_URL', None)
redispassword = os.getenv('REDIS_PASSWORD', None)
dbname = os.getenv('DB_NAME', None)
dbuser = os.getenv('DB_USER', None)
dbpassword = os.getenv('DB_PASSWORD', None)
dbhost = os.getenv('DB_HOST', None)

if production:
    sshtunnel.SSH_TIMEOUT = 5.0
    sshtunnel.TUNNEL_TIMEOUT = 5.0

    tunnel = sshtunnel.SSHTunnelForwarder(
        (sshhost),
        ssh_username=sshusername, ssh_password=sshpassword,
        remote_bind_address=(sshaddress, int(sshport))
    )
    tunnel.start()


BASE_DIR = Path(__file__).resolve().parent.parent
DEBUG = True
ALLOWED_HOSTS = ['*']

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

if not production:
    SECRET_KEY = 'django-insecure-wj*9!lp&21r%x^nuc9_g^l_+mbn8&334m0i$q@*uiwbez-!u6y'
else:
    SECRET_KEY = os.getenv('SECRET_KEY', None)
# SECURITY WARNING: don't run with debug turned on in production!

# Application definition

INSTALLED_APPS = [
    'channels',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'api',
    'rest_framework',
    'rest_framework.authtoken',
    'djoser',
    'utility',
    'notifier',
    'interview',
    'chat',
    'automator',
    'administrator',
]
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'workaapi.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
if not production:
    CHANNEL_LAYERS = {
        "default": {
            "BACKEND": "channels_redis.core.RedisChannelLayer",
            "CONFIG": {
                "hosts": [os.environ.get('REDIS_URL', 'redis://localhost:6379')],
            },
        },
    }
else:
    CHANNEL_LAYERS = {
        "default": {
            "BACKEND": "channels_redis.core.RedisChannelLayer",
            "CONFIG": {
                "hosts": [redisurl],
            },
            "password": redispassword
        },
    }
WSGI_APPLICATION = 'workaapi.wsgi.application'
ASGI_APPLICATION = 'workaapi.asgi.application'

if not production:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': dbname,
            'USER': dbuser,
            'PASSWORD': dbpassword,
            'HOST': dbhost,
            'PORT': tunnel.local_bind_port,
        }
    }


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSIONS_CLASSES': [
        'rest_framework.permissions.IsAuthentication',
    ]
}
# AUTH_USER_MODEL = 'api.User'
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_USERNAME_REQUIRED = False
DJOSER = {
    'LOGIN_FIELD': 'email',
    'USER_CREATE_PASSWORD_RETYPE': True,
    'PASSWORD_RESET_CONFIRM_URL': 'password/reset/confirm/{uid}/{token}',
    'USERNAME_RESET_CONFIRM_URL': 'username/reset/confirm/{uid}/{token}',
    'ACTIVATION_URL': 'activate/{uid}/{token}',
    'SEND_ACTIVATION_EMAIL': False,
    'PASSWORD_RESET_CONFIRM_RETYPE': True,
    'SERIALIZERS':
        {
            'user_create': 'api.serializers.UserCreateSerializer',
            'user': 'api.serializers.UserCreateSerializer',
        },
    'EMAIL': {
        'activation': 'api.email.ActivationEmail'
    }
}
CSRF_TRUSTED_ORIGINS = ["https://chat.workanetworks.com"]
# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
# EMAIL_BACKEND = os.environ['EMAIL_BACKEND']
# EMAIL_HOST = os.environ['EMAIL_HOST']
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = os.environ['EMAIL_HOST_USER']
# EMAIL_HOST_PASSWORD = os.environ['EMAIL_HOST_PASSWORD']
# DEFAULT_FROM_EMAIL = os.environ['EMAIL_HOST_USER']
EMAIL_PORT = 587
# PROTOCOL = "https"
# DOMAIN = "api.workanetworks.com"
PROTOCOL = "http"
DOMAIN = "127.0.0.1:8000"
